jobs:
  - job: updateCheck
    displayName: Update check
    pool:
      vmImage: windows-2022
    steps:
      - powershell: |
          iwr -useb get.scoop.sh -outfile 'install.ps1'
          ./install.ps1 -RunAsAdmin
          ./bin/checkver.ps1 6> checkverOutput.log
          if (cat .\checkverOutput.log | findstr -i "scoop version is") { exit 1 } else { exit 0 }
        displayName: Check for new versions
      - task: CopyFiles@2
        condition: true
        inputs:
          contents: "checkverOutput.log"
          targetFolder: $(Build.ArtifactStagingDirectory)
          overWrite: true
      - task: PublishBuildArtifacts@1
        condition: true
        inputs:
          pathtoPublish: "$(Build.ArtifactStagingDirectory)"
          artifactName: "Checkver output"
          publishLocation: "Container"
      - task: SendTelegramNotification@0
        condition: eq(variables['Agent.JobStatus'], 'Failed')
        inputs:
          botToken: $(botToken)
          chats: $(chatId)
          taskStatus: false
          message: There are updates for your scoop bucket!
      - task: SendTelegramNotification@0
        condition: ne(variables['Agent.JobStatus'], 'Failed')
        inputs:
          botToken: $(botToken)
          chats: $(chatId)
          taskStatus: false
          message: Scoop bucket was checked.
  - job: validityCheck
    displayName: Functionality check
    pool:
      vmImage: windows-2022
    steps:
      - powershell: |
          iwr -useb get.scoop.sh -outfile 'install.ps1'
          ./install.ps1 -RunAsAdmin
          ./bin/install-all.ps1
      - task: CopyFiles@2
        condition: true
        inputs:
          contents: "install_*.log"
          targetFolder: $(Build.ArtifactStagingDirectory)
          overWrite: true
      - task: PublishBuildArtifacts@1
        condition: true
        inputs:
          pathtoPublish: "$(Build.ArtifactStagingDirectory)"
          artifactName: "Installation logs"
          publishLocation: "Container"
      - task: SendTelegramNotification@0
        condition: eq(variables['Agent.JobStatus'], 'Failed')
        inputs:
          botToken: $(botToken)
          chats: $(chatId)
          taskStatus: false
          message: Some manifests are not working.
